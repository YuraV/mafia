- can_be_player = User.where("id not in(?) ", @used_ids)
.game_content
  %div
    %span
      Game Description:
      %strong
        = @game.description

  %div
    %span
      Game Manager:
      %strong
        = @game.manager.user.name

  %div{data: {id: "#{@game.id}"}, class: 'game'}
    %span
      Game ID:
      %strong
        = @game.id
  .dragable
    .items
      - can_be_player.each do |player|
        - unless player.id == nil
          .btn.item{:data => {:id => "#{player.id}"}}
            = player.name
  -#%div= link_to 'Rolify', edit_game_appointment_path(@game, @appointments), rel: ''
.dropzone-container
  .div1.dropzone

    Players:
    %strong
      - @game.appointments.each do |player|
        - unless player.id == nil
          .btn
            = link_to player.user.name,game_appointment_path(@game, player), method: :delete
      = link_to 'Remove All', destroy_all_game_appointment_path(@game, @appointments), method: :delete if @game.appointments.present?

:javascript
  $(function(){
    new Drag_Drop()
  })
