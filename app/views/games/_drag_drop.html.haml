- can_be_player = User.where("id not in(?) ", @used_ids)
.dragable
  .items
    - can_be_player.each do |player|
      - unless player.id == nil
        .btn.btn-inverse.item{:data => {:id => "#{player.id}"}}
          = player.name

.dropzone-container
  .div1.dropzone.add
    .progress
      Players:
    %strong
      - @game.appointments.each do |player|
        - unless player.id.nil?
          .item
            = link_to "#{player.user.name}" ,game_appointment_path(@game, player), method: :delete, class: 'btn btn-danger'

      - if @game.appointments.present?
        .remove_all
          = link_to 'Remove All', destroy_all_game_appointment_path(@game, @appointments), method: :delete, class: 'btn'
        .remove_all
          = link_to 'Rolify', set_role_game_appointment_path(@game, @appointments), rel: 'facebox', class: 'btn'
